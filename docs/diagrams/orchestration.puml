@startuml
skinparam monochrome true
skinparam dpi 150
title PRDV Orchestration Overview

package "Planning" {
  class PlannerPromptBuilder {
    +build(): str
    -base_prompt: str
    -dependency_overview: List
    -socratic_checks: List
  }

  class TaskGraph {
    +from_planner_output(payload)
    +tasks: List[TaskNode]
    +metadata: Dict
    +dependency_overview: List
  }
}

package "Execution" {
  class TaskCoordinator {
    +schedule_next(preferred_tool)
    +record_react_step(...)
    -_provided_depth: Dict
    -_affinity_map: Dict
  }

  class PRDVLoop {
    +plan()
    +research()
    +debate()
    +validate()
  }
}

class QueryState {
  +set_task_graph(graph)
  +metadata: Dict
  +react_traces: List
}

PlannerPromptBuilder --> TaskGraph : emits JSON
TaskGraph --> QueryState : normalised
QueryState --> TaskCoordinator : hydrates nodes
TaskCoordinator --> PRDVLoop : schedules phases
PRDVLoop --> QueryState : records telemetry

note right of PlannerPromptBuilder
  Emits dependency_overview and
  socratic_checks to stress-test
  each task before execution.
end note

note right of TaskCoordinator
  Combines planner-provided
  dependency_depth with live
  readiness checks and tool
  affinity preferences.
end note

@enduml
