name: CI

# This workflow is manually triggered only.
# Run it from the Actions tab via "Run workflow" or
# via the CLI: `gh workflow run CI`.
on:
  workflow_dispatch:

env:
  COVERAGE_THRESHOLD: 90

jobs:
  verify:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-14]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Verify Python version
        run: |
          python - <<'EOF'
          import sys
          major, minor = sys.version_info[:2]
          assert major == 3 and minor >= 12, f"Python 3.12 or newer required, got {major}.{minor}"
          EOF
      - name: Install uv
        run: python -m pip install uv
      - name: Install dependencies
        run: uv pip sync uv.lock
      - name: Install extras
        run: uv pip install -e '.[full,parsers,git,llm,dev]'
      - name: Validate tool versions
        run: uv run python scripts/check_env.py
      - name: Run task verify
        run: uv run task verify
      - name: Run task coverage
        run: uv run task coverage
      - name: Enforce coverage threshold
        run: |
          uv run coverage report --fail-under=${{ env.COVERAGE_THRESHOLD }}
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data
          path: |
            .coverage
            coverage.xml
      - name: Exercise extension download fallback
        run: uv run pytest tests/unit/test_download_duckdb_extensions.py::test_download_extension_network_failure

  coverage-regression:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install uv
        run: python -m pip install uv
      - name: Restore coverage baseline
        id: coverage-cache
        uses: actions/cache/restore@v4
        with:
          path: baseline/coverage.xml
          key: coverage-${{ github.ref }}
      - name: Download current coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage-data
          path: current
      - name: Check coverage regression
        run: |
          uv run python scripts/check_token_regression.py \
            --coverage-current current/coverage.xml
      - name: Save coverage baseline
        uses: actions/cache/save@v4
        with:
          path: current/coverage.xml
          key: coverage-${{ github.ref }}

  build-wheels:
    needs: verify
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-14]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install uv
        run: python -m pip install uv
      - name: Build wheel
        run: uv run python -m build
      - name: Install wheel in fresh venv
        run: |
          python -m venv wheel
          wheel/bin/pip install dist/*.whl
          wheel/bin/python -c "import autoresearch"
