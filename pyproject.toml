[project]
name = "autoresearch"
version = "0.1.0"
description = "Local-first research assistant that coordinates multiple agents using dialectical reasoning"
authors = [
    {name = "Caitlyn O'Hanna",email = "caitlyn.ohanna@gmail.com"}
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12,<4.0"
packages = [{include = "autoresearch", from = "src"}]
dependencies = [
    "a2a-sdk >=0.2.8",
    "dspy-ai >=2.6.24",
    "duckdb >=1.3.0",
    "fastapi >=0.115.12",
    "fastmcp >=2.8.1",
    "httpx >=0.28.1",
    "kuzu >=0.11.0",
    "langchain-community >=0.3.24",
    "langchain-openai >=0.3.23",
    "langgraph >=0.5.3",
    "loguru >=0.7.2",
    "mcp[cli] >=1.12.0",
    "networkx >=3.4.2",
    "opentelemetry-api >=1.34.1",
    "opentelemetry-sdk >=1.34.1",
    "owlrl >=7.1.3",
    "prometheus_client >=0.22.1",
    "psutil >=7.0.0",
    "pydantic >=2",
    "pydantic-settings >=2.9.1",
    "python-dotenv >=1.1.0",
    "rank-bm25 >=0.2.2",
    "rdflib >=7.1.4",
    "rdflib-sqlalchemy >=0.5.0", # Only needed if using SQLAlchemy-backed RDF stores
    "requests >=2.32.3",
    "responses >=0.25.7",
    "rich >=14.0.0",
    "slowapi ==0.1.9", # Pinned due to known compatibility issues
    "structlog >=25.3.0",
    "tabulate >=0.9.0",
    "tinydb >=4.8.0",
    "typer >=0.16.0",
    "watchfiles >=0.21"
]
[project.optional-dependencies]
# Minimal install: only core embedding model support
minimal = [
    "sentence-transformers >=2.7.0"
]
# NLP features: topic modeling, vector search, and transformer models
nlp = [
    "spacy >=3.7.2",
    "bertopic >=0.17.3",
    "pynndescent >=0.5.13",
    "scipy >=1.16.0",
    "transformers >=4.53.0"
]
# UI features: Streamlit-based user interface
ui = [
    "streamlit >=1.45.1"
]
# Vector search extension for DuckDB
vss = [
    "duckdb-extension-vss >=1.3.0"
]
# Document parsing support
parsers = [
    "pdfminer-six >=20250506",
    "python-docx >=1.2.0"
]
# Local Git repository search
git = [
    "gitpython >=3.1"
]
# Distributed computing support
distributed = [
    "ray >=2.10.0",
    "redis >=6.2"
]
# Data analysis features
analysis = [
    "polars >=1.31.0"
]
# Full install: all features for power users and development
full = [
    "sentence-transformers >=2.7.0",
    "spacy >=3.7.2",
    "bertopic >=0.17.3",
    "pynndescent >=0.5.13",
    "scipy >=1.16.0",
    "transformers >=4.53.0",
    "streamlit >=1.45.1",
    "duckdb-extension-vss >=1.3.0",
    "pdfminer-six >=20250506",
    "python-docx >=1.2.0",
    "ray >=2.10.0",
    "redis >=6.2",
    "slowapi ==0.1.9",
    "lmstudio >=1.4.1",
    "polars >=1.31.0",
    "gitpython >=3.1"
]

[tool.poetry.extras]
minimal = [
    "sentence-transformers"
]
analysis = ["polars"]
kuzu = ["kuzu"]


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-bdd = "^8.1.0"
pytest-cov = "^6.1.1"
flake8 = "^7.2.0"
mypy = "^1.10.0"
tomli-w = "^1.2.0"
types-requests = "^2.32.0"
types-networkx = "^3.4.0"
types-protobuf = "^6.30.2.20250516"
hypothesis = "^6.135.33"
cibuildwheel = "^3.0.1"
types-tabulate = "^0.9.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[project.scripts]
autoresearch = "autoresearch.main:app"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--maxfail=1 --disable-warnings -q --cov=src --cov=tests --cov-report=xml --cov-report=term-missing --cov-fail-under=20 -m 'not slow'"
testpaths = ["tests/unit", "tests/integration", "tests/behavior"]
python_files = ["test_*.py", "*_steps.py"]
markers = [
    "behavior: mark behavior (BDD) tests",
    "integration: mark integration tests",
    "unit: mark unit tests",
    "real_vss: enable actual VSS extension logic",
    "slow: tests that take a long time to run"
]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
plugins = ["pydantic.mypy"]
check_untyped_defs = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["autoresearch", "tests"]

[tool.cibuildwheel]
build = "cp312-*"
