[project]
name = "autoresearch"
version = "0.1.0a1" # keep in sync with autoresearch.__version__
description = "Local-first research assistant coordinating agents for evidence-backed answers."
authors = [
    {name = "Caitlyn O'Hanna",email = "caitlyn.ohanna@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
packages = [{include = "autoresearch", from = "src"}]
dependencies = [
    "a2a-sdk >=0.3.0",
    "click >=8.2.1",  # Patched weasel.util.config to use shell_completion helpers
    "duckdb >=1.3.0",
    "fastapi >=0.116.1", # 0.116.1+ needed for Pydantic v2 and Starlette 0.41
    "fastmcp >=2.11.2",
    "httpx >=0.28.1,<0.29",  # 0.28 warns on raw data uploads; stay on 0.28.x until upstream finalizes removal
    "kuzu >=0.11.1", # Python 3.12 wheels require 0.11.1+
    "langchain-community >=0.3.27",
    "langchain-openai >=0.3.33",
    "langgraph >=0.6.4",
    "loguru >=0.7.3",
    "mcp[cli] >=1.12.4",
    "networkx >=3.5",
    "opentelemetry-api >=1.37.0",
    "opentelemetry-sdk >=1.37.0",
    "prometheus_client >=0.22.1",
    "psutil >=7.0.0",
    "pydantic >=2.11.9",
    "pydantic-settings >=2.10.1",
    "python-dotenv >=1.1.1",
    "pytest-httpx >=0.35.0",
    "rank-bm25 >=0.2.2",
    "rdflib >=7.1.4",
    "oxrdflib >=0.5.0", # Oxigraph-backed RDF store
    "requests >=2.32.4",
    "responses >=0.25.8",
    "rich >=14.1.0",
    "slowapi ==0.1.9", # Pinned to 0.1.9 for FastAPI/Starlette compatibility
    "structlog >=25.4.0",
    "tabulate >=0.9.0",
    "tinydb >=4.8.2",
    "tomli-w >=1.2.0",
    "typer >=0.17.4",
    "watchfiles >=1.1.0",
    "setuptools >=80.9.0,<81",
    "owlrl >=7.1.4",
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU Affero General Public License v3",
]

[tool.autoresearch]
release_date = "Unreleased" # keep in sync with autoresearch.__release_date__

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"autoresearch" = ["py.typed"]
"autoresearch.examples" = ["autoresearch.toml", ".env.example"]

[tool.setuptools.data-files]
"typings" = ["typings/**/*.pyi"]
[project.optional-dependencies]
# Keep versions in sync with scripts/check_env.py
# Minimal install: only core embedding model support
minimal = [
    "sentence-transformers >=2.7.0"
]
# Vendored and upstream typing information for third-party dependencies
typing-stubs = [
    "types-psutil >=5.9.5.20240516; python_version < '3.13'",
    "types-protobuf >=6.30.2.20250516; python_version < '3.13'",
    "types-requests >=2.32.0; python_version < '3.13'",
    "types-tabulate >=0.9.0; python_version < '3.13'",
]
# NLP features: topic modeling, vector search, and transformer models
nlp = [
    "spacy >=3.7.2; python_version < '3.13'"
]
# GPU-only packages
gpu = [
    "bertopic >=0.17.3",
    "pynndescent >=0.5.13",
    "scipy >=1.16.0",
    "lmstudio >=1.4.1"
]
# UI features: Streamlit-based user interface
ui = [
    "streamlit >=1.45.1",
    "pillow >=11.3.0"
]
# Vector search extension for DuckDB
vss = [
    "duckdb-extension-vss >=1.3.0; python_version < '3.13'"
]
# Document parsing support
parsers = [
    "pdfminer-six >=20250506", # Date-based release with security fixes
    "python-docx >=1.2.0"
]
# Local Git repository search
git = [
    "GitPython >=3.1; python_version < '3.13'"
]
# Documentation build dependencies
docs = [
    "mkdocs >=1.6.1",
    "mkdocs-material >=9.6.19",
    "mkdocstrings[python] >=0.30.0",
    "mkdocs-exclude >=1.0.2",
]
# Distributed computing support
distributed = [
    "ray >=2.10.0",
    "redis >=6.2"
]
# Data analysis features
analysis = [
    "polars >=1.31.0"
]
# CPU-friendly LLM dependencies
llm = [
    "dspy-ai >=3.0.3",
    "fastembed >=0.7.3"
]
# Dependencies needed only for running tests
test = [
    "owlrl >=7.1.3",
    "a2a-sdk >=0.2.16",
    "freezegun >=1.5.0",
    "responses >=0.25.7",
    "uvicorn >=0.35.0",
    "psutil >=7.0.0",
    "redis >=6.2",
    "fakeredis >=2.25.0",
    "pdfminer-six >=20250506", # Date-based release with security fixes
    "python-docx >=1.2.0",
    "pytest-httpx >=0.35.0",
    "pytest-bdd >=8.1.0",
    "pytest-benchmark >=4.0.0",
    "flake8 >=7.2.0",
    "tomli-w >=1.2.0",
    "duckdb >=1.0.0",
    "networkx >=3.3",
    "hypothesis >=6.135.33",
]
# Full install: all features for power users and development
full = [
    "spacy >=3.7.2; python_version < '3.13'",
    "streamlit >=1.45.1",
    "duckdb-extension-vss >=1.3.0; python_version < '3.13'",
    "ray >=2.10.0",
    "redis >=6.2",
    "slowapi ==0.1.9", # Pinned to 0.1.9 for FastAPI/Starlette compatibility
    "polars >=1.31.0",
    "matplotlib >=3.10.0",
    "types-psutil >=5.9.5.20240516; python_version < '3.13'",
    "types-protobuf >=6.30.2.20250516; python_version < '3.13'",
    "types-requests >=2.32.0; python_version < '3.13'",
    "types-tabulate >=0.9.0; python_version < '3.13'",
]
dev = [
    "pytest >=8.3.5",
    "pytest-bdd >=8.1.0",
    "pytest-cov >=6.1.1",
    "pytest-httpx >=0.35.0",
    "flake8 >=7.2.0",
    "black >=24.4.0",
    "mypy >=1.10.0",
    "tomli-w >=1.2.0",
    "types-requests >=2.32.0; python_version < '3.13'",
    "types-networkx >=3.4.0; python_version < '3.13'",
    "types-psutil >=5.9.5.20240516; python_version < '3.13'",
    "types-protobuf >=6.30.2.20250516; python_version < '3.13'",
    "hypothesis >=6.135.33",
    "cibuildwheel >=3.0.1; python_version < '3.13'",
    "types-tabulate >=0.9.0; python_version < '3.13'",
    "pydantic >=2.11.9",
    "typer >=0.16.0",
    "freezegun >=1.5.0",
    "duckdb-extension-vss >=1.3.0; python_version < '3.13'",
    "a2a-sdk >=0.2.16",
    "GitPython >=3.1; python_version < '3.13'",
    "pdfminer-six >=20250506", # Date-based release with security fixes
    "python-docx >=1.2.0",
    "spacy >=3.7.2; python_version < '3.13'",
    "responses >=0.25.7",
    "uvicorn >=0.35.0",
    "psutil >=7.0.0",
    "redis >=6.2",
    "duckdb >=1.0.0",
    "networkx >=3.3",
    "fakeredis >=2.25.0",
]
# Minimal dev dependencies for CI and lightweight setups
dev-minimal = [
    "pytest >=8.3.5",
    "pytest-bdd >=8.1.0",
    "pytest-cov >=6.1.1",
    "pytest-httpx >=0.35.0",
    "flake8 >=7.2.0",
    "black >=24.4.0",
    "mypy >=1.10.0",
    "tomli-w >=1.2.0",
    "redis >=6.2",
    "types-psutil >=5.9.5.20240516; python_version < '3.13'",
    "types-protobuf >=6.30.2.20250516; python_version < '3.13'",
    "types-requests >=2.32.0; python_version < '3.13'",
    "types-tabulate >=0.9.0; python_version < '3.13'",
]

# Packaging utilities for building and publishing distributions
build = [
    "build >=1.2.2",
    "twine >=6.0.1",
    "cibuildwheel >=3.0.1; python_version < '3.13'",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "pytest-httpx>=0.35.0",
]


[project.scripts]
autoresearch = "autoresearch.main:app"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-m 'not slow and not pending'"
testpaths = [
    "tests/unit",
    "tests/integration",
    "tests/behavior",
    "tests/behavior/features",
]
bdd_features_base_dir = "tests/behavior/features"
python_files = ["test_*.py", "*_steps.py"]
markers = [
    "behavior: mark behavior (BDD) tests",
    "integration: mark integration tests",
    "unit: mark unit tests",
    "real_vss: enable actual VSS extension logic",
    "slow: tests that take a long time to run",
    "requires_ui: tests that depend on the ui extra",
    "requires_vss: tests that depend on the vss extra",
    "requires_git: tests that depend on the git extra",
    "requires_nlp: tests needing NLP resources",
    "requires_distributed: tests that depend on the distributed extra",
    "error_recovery: behavior tests verifying recovery paths",
    "reasoning_modes: behavior tests for reasoning strategies",
    "user_workflows: end-to-end user scenarios"
]

[tool.mypy]
# Typing strictness guidelines: see docs/dev/typing-strictness.md
python_version = "3.12"
strict = true
warn_unused_configs = true
no_implicit_optional = true
mypy_path = ["typings"]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["autoresearch", "tests"]

[tool.cibuildwheel]
build = "cp312-*"
