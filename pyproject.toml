[project]
name = "autoresearch"
version = "0.1.0"
description = ""
authors = [
    {name = "Caitlyn O'Hanna",email = "caitlyn.ohanna@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
packages = [{include = "autoresearch", from = "src"}]
dependencies = [
    "structlog (>=25.3.0,<26.0.0)",
    "dspy-ai (>=2.6.24,<3.0.0)",
    "python-dotenv (>=1.1.0,<2.0.0)",
    "langgraph (>=0.4.5,<0.5.0)",
    "langchain-community (>=0.3.24,<0.4.0)",
    "typer (>=0.15.4,<0.16.0)",
    "mcp[cli] (>=1.9.0,<2.0.0)",
    "pydantic (>=2.11.4,<3.0.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
    "requests (>=2.32.3,<3.0.0)",
    "responses (>=0.25.7,<0.26.0)",
    "networkx (>=3.4.2,<4.0.0)",
    "duckdb (>=1.2.2,<2.0.0)",
    "rdflib (>=7.1.4,<8.0.0)",
    "rdflib-sqlalchemy (>=0.5.0,<0.6.0)",
    "owlrl (>=6.0.2,<7.0.0)",
    "fastapi (>=0.115.12)",
    "loguru (>=0.7.2,<0.8.0)",
    "prometheus_client (>=0.20.0,<0.21.0)",
    "tinydb (>=4.8.0,<5.0.0)",
    "opentelemetry-api (>=1.34.1,<2.0.0)",
    "opentelemetry-sdk (>=1.34.1,<2.0.0)",
    "watchfiles (>=0.21,<2.0)",
    "rich (>=14.0.0,<15.0.0)",
    "psutil (>=5.9,<6.0)",
    "langchain-openai (>=0.3.23,<0.4.0)",
    "fastmcp (>=2.8.1,<3.0.0)",
    "rank-bm25 (>=0.2.2,<0.3.0)",
    "sentence-transformers (>=2.7.0,<3.0.0)",
    "a2a-sdk (>=0.2.8,<0.3.0)",
    "kuzu (>=0.10.0,<0.11.0)",
    "streamlit (>=1.45.1,<2.0.0)",
    "spacy (>=3.7.2,<4.0.0)",
    "bertopic (>=0.16.2,<0.17.0)",
    "duckdb-extension-vss (>=1.3.0,<2.0.0)",
    "pdfminer-six (>=20250506,<20250507)",
    "python-docx (>=1.2.0,<2.0.0)",
    "pynndescent (>=0.5.13,<0.6.0)",
    "scipy (>=1.16.0,<2.0.0)",
    "transformers (>=4.53.0,<5.0.0)",
    "slowapi (==0.1.9)",
    "tabulate (>=0.9.0,<0.10.0)",
    "ray (>=2.10.0,<3.0.0)"
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-bdd = "^8.1.0"
pytest-cov = "^6.1.1"
flake8 = "^7.2.0"
mypy = "^1.16.0"
tomli-w = "^1.2.0"
types-requests = "^2.32.0"
types-networkx = "^3.4.0"
types-protobuf = "^6.30.2.20250516"
hypothesis = "^6.100"
cibuildwheel = "^2.16.2"
types-tabulate = "^0.9.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[project.scripts]
autoresearch = "autoresearch.main:app"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--maxfail=1 --disable-warnings -q --cov=src --cov=tests --cov-report=xml --cov-report=term-missing --cov-fail-under=90"
testpaths = ["tests/unit", "tests/integration", "tests/behavior"]
python_files = ["test_*.py", "*_steps.py"]
markers = [
    "behavior: mark behavior (BDD) tests",
    "integration: mark integration tests",
    "unit: mark unit tests",
    "real_vss: enable actual VSS extension logic"
]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["autoresearch", "tests"]
